{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts"],"names":["name","props","openDelay","type","Number","default","closeDelay","data","openTimeout","closeTimeout","undefined","methods","clearDelay","clearTimeout","this","runDelay","delay","parseInt","setTimeout","cb","open","close","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","content","$refs","index","getMaxZIndex","exclude","base","zis","activeElements","document","Math","defaultMenuProps","offsetY","offsetOverflow","transition","VSelect","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","classes","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","getText","internalSearch","allItems","value","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","watch","internalValue","isFocused","input","isMenuActive","val","oldVal","activateMenu","created","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","VTextField","mergeData","attrs","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","delimiters","returnObject","editingIndex","computedCounterValue","$slots","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","toLocaleLowerCase","includes","setValue","updateEditing","updateCombobox","isUsingSlot","Boolean","$scopedSlots","updateTags","menuIndex","onPaste","pastedItemText","findExistingIndex","root","isDark","render","node","baseMixins","activator","validator","disabled","internalActivator","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","mounted","slotType","beforeDestroy","addActivatorEvents","keys","Object","key","genActivator","on","genActivatorAttributes","role","genActivatorListeners","getActivator","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","functional","directives","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","children","icon","h","VIcon","dark","light","staticClass","center","class","click","f","mixins","inset","themeClasses","$listeners","action","dense","itemDisabled","itemValue","noDataText","parsedItems","tileActiveClass","setTextColor","staticNoDataTile","tile","mousedown","$createElement","VListItem","genTileContent","genAction","VListItemAction","color","genDivider","VDivider","genFilteredText","getMaskedCharacters","end","start","genHighlight","middle","genHeader","genTile","id","_uid","activeClass","inputValue","parent","scopedSlot","needsTile","innerHTML","VList","itemsLength","tabindex","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","ClickOutside","appendIcon","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","openOnClear","smallChips","cachedItems","menuIsBooted","lastItem","lazyValue","keyboardLookupPrefix","keyboardLookupLastTime","filterDuplicates","concat","computedOwns","counterValue","handler","closeConditional","include","dynamicHeight","hasChips","$vnode","context","$vuetify","lang","t","select","scopedSlots","staticList","VSelectList","virtualizedItems","slice","normalisedProps","split","acc","p","nudgeBottom","immediate","blur","getContent","contains","$el","uniqueValues","arr","isDisabled","isInteractive","VChip","small","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","readonly","placeholder","keypress","onKeyPress","genHiddenInput","attrs$","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelection","genSlotSelection","selection","selected","onBlur","$emit","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","isReadonly","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","values","v","appendInner","active","chipGroup","closeIcon","closeLabel","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","breakingProps","original","replacement","genFilter","left","genClose","right","size","genContent","setBackgroundColor","maxWidth","minWidth","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","bottom","width","height","offsetTop","offsetLeft","relativeYOffset","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","isNaN","computedTop","hasActivator","absoluteYOffset","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","startTransition","Promise","resolve","updateDimensions","offsetRect","Resize","provide","isInMenu","theme","auto","offsetX","origin","calculatedTopAuto","defaultOffset","resizeTimeout","tiles","calculatedLeft","menuWidth","parseFloat","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","styles","transformOrigin","next","prev","classList","remove","$attrs","hasOwnProperty","calcScrollPosition","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","attributes","genTransition","genDirectives","options","menuable__content__active","keydown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","lastTile","firstTile","onResize","arg","showLazyContent","returnValue","originalValue","save"],"mappings":"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","file":"js/chunk-cada739c.0cb65bd2.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) } /* eslint-disable-line no-console */\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\nimport Detachable from '../detachable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable,\n  Detachable,\n)\n\ninterface dimensions {\n  top: number\n  left: number\n  bottom: number\n  right: number\n  width: number\n  height: number\n  offsetTop: number\n  scrollHeight: number\n  offsetLeft: number\n}\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  dimensions: {\n    activator: dimensions\n    content: dimensions\n  }\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    activatorNode: [] as VNode[],\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    relativeYOffset: 0,\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n    absoluteYOffset (): number {\n      return this.pageYOffset - this.relativeYOffset\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n\n    if (this.hasWindow) {\n      window.addEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  beforeDestroy () {\n    if (this.hasWindow) {\n      window.removeEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.absoluteYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.absoluteYOffset && !this.allowOverflow) {\n        top = this.absoluteYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        if (this.$refs.content) {\n          if (this.$refs.content.offsetParent) {\n            const offsetRect = this.getRoundedBoundedClientRect(this.$refs.content.offsetParent)\n\n            this.relativeYOffset = window.pageYOffset + offsetRect.top\n            dimensions.activator.top -= this.relativeYOffset\n            dimensions.activator.left -= window.pageXOffset + offsetRect.left\n          }\n\n          dimensions.content = this.measure(this.$refs.content)\n        }\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n"],"sourceRoot":""}